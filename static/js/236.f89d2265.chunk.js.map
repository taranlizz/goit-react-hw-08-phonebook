{"version":3,"file":"static/js/236.f89d2265.chunk.js","mappings":"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","sources":["components/AuthFormHeading/AuthFormHeading.styled.jsx","components/AuthFormHeading/AuthFormHeading.jsx","components/FormStyles/FormStyles.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Greeting = styled.p`\n  font-size: 14px;\n  color: #757575;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 30px;\n  margin-bottom: 7px;\n`;\n\nexport const Redirect = styled.p`\n  font-weight: 500;\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: #7f56d9;\n`;\n","import {\n  Greeting,\n  Heading,\n  LinkStyled,\n  Redirect,\n  Wrapper,\n} from './AuthFormHeading.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const AuthHeading = ({ children }) => {\n  const { pathname } = useLocation();\n  return (\n    <Wrapper>\n      <Greeting>Welcome! 👋</Greeting>\n      <Heading>{children}</Heading>\n      {pathname.includes('/login') ? (\n        <Redirect>\n          Don't have an account yet?{' '}\n          <LinkStyled to=\"/register\">Sign up</LinkStyled>\n        </Redirect>\n      ) : (\n        <Redirect>\n          Already have an account? <LinkStyled to=\"/login\">Sign in</LinkStyled>\n        </Redirect>\n      )}\n    </Wrapper>\n  );\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const LabelEl = styled.label`\n  font-size: 15px;\n  margin-bottom: 5px;\n`;\n\nexport const InputEl = styled(Field)`\n  height: 40px;\n  padding-right: 12px;\n  padding-left: 12px;\n  background-color: rgba(127, 86, 217, 0.04);\n  border-radius: 4px;\n  margin-bottom: 20px;\n  border: 1px solid #d8d8d8;\n  font-size: 14px;\n  line-height: 1.75;\n\n  &:focus {\n    outline: 1px solid #7f56d9;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 120px;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { FormEl } from 'components/FormStyles/FormStyles.styled';\nimport { register } from 'redux/auth/operations';\nimport { Button, TextField } from '@mui/material';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    ),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: { name: '', email: '', password: '' },\n    validationSchema: validationSchema,\n    onSubmit: (credentials, actions) => {\n      dispatch(register(credentials));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <FormEl onSubmit={formik.handleSubmit}>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        value={formik.values.name}\n        variant=\"outlined\"\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n        placeholder=\"Please enter your name\"\n        color=\"secondary\"\n        required\n        sx={{\n          marginBottom: '15px',\n        }}\n      />\n      <TextField\n        type=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formik.values.email}\n        variant=\"outlined\"\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n        placeholder=\"Please enter your email\"\n        color=\"secondary\"\n        required\n        sx={{ marginBottom: '15px' }}\n      />\n      <TextField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        value={formik.values.password}\n        variant=\"outlined\"\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n        placeholder=\"Please enter your password\"\n        color=\"secondary\"\n        required\n        sx={{\n          marginBottom: '15px',\n        }}\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n        Sign Up\n      </Button>\n    </FormEl>\n  );\n};\n","import { AuthHeading } from 'components/AuthFormHeading/AuthFormHeading';\nimport { CenterWrapper } from 'components/CenterWrapper/CenterWrapper';\nimport { FormWrapper } from 'components/FormStyles/FormStyles.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <CenterWrapper>\n      <FormWrapper>\n        <AuthHeading>Create new account</AuthHeading>\n        <RegisterForm />\n      </FormWrapper>\n    </CenterWrapper>\n  );\n};\n\nexport default Register;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Greeting","_templateObject2","Heading","_templateObject3","Redirect","_templateObject4","LinkStyled","Link","_templateObject5","AuthHeading","_ref","children","pathname","useLocation","_jsxs","_jsx","includes","to","FormEl","FormWrapper","Field","validationSchema","yup","name","required","matches","email","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","credentials","actions","register","resetForm","handleSubmit","TextField","type","label","value","values","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","placeholder","color","sx","marginBottom","Button","CenterWrapper"],"sourceRoot":""}