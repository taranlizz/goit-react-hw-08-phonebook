{"version":3,"file":"static/js/933.34a6f13e.chunk.js","mappings":"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","sources":["components/Form/FormStyle.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListEl/ContactListEl.styled.jsx","components/ContactListEl/ContactListEl.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const LabelEl = styled.label`\n  font-size: 15px;\n  margin-bottom: 5px;\n`;\n\nexport const InputEl = styled(Field)`\n  height: 40px;\n  padding-right: 12px;\n  padding-left: 12px;\n  background-color: rgba(127, 86, 217, 0.04);\n  border-radius: 4px;\n  margin-bottom: 20px;\n  border: 1px solid #d8d8d8;\n  font-size: 14px;\n  line-height: 1.75;\n\n  &:focus {\n    outline: 1px solid #7f56d9;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 120px;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  margin-bottom: 40px;\n  background-color: #fff;\n  border-radius: 10px;\n  padding: 30px;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 10px 3px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled(Field)`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  outline: 0;\n  margin-bottom: 5px;\n  width: 100%;\n  background-color: transparent;\n\n  &:focus {\n    border-color: #3366cc;\n  }\n\n  &:last-of-type {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #3366cc;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #27408b;\n  }\n`;\n\nexport const ErrorDiv = styled(ErrorMessage)`\n  font-size: 20px;\n  color: red;\n  margin-bottom: 10px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectErrorValue = state => state.contacts.error;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { ErrorDiv } from './ContactForm.styled';\nimport { FormEl, InputEl, LabelEl } from 'components/Form/FormStyle.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button } from '@mui/material';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Required!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    ),\n  number: Yup.string()\n    .required('Required!')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      '        Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = () => {\n  const nameInputID = nanoid();\n  const numberInputID = nanoid();\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const checkIsPresent = contact => {\n    const isPresent = savedContact =>\n      savedContact.name.toLowerCase() === contact.name.toLowerCase();\n\n    return contacts.some(isPresent);\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactSchema}\n      onSubmit={(contact, actions) => {\n        contact.name = contact.name.trim();\n        if (checkIsPresent(contact)) {\n          return alert(`${contact.name} is already in contacts.`);\n        }\n        dispatch(addContact(contact));\n        actions.resetForm();\n      }}\n    >\n      <FormEl>\n        <LabelEl htmlFor={nameInputID}>Name</LabelEl>\n        <InputEl name=\"name\" id={nameInputID}></InputEl>\n        <ErrorDiv name=\"name\" component=\"div\" />\n        <LabelEl htmlFor={numberInputID}>Number</LabelEl>\n        <InputEl name=\"number\" id={numberInputID} type=\"tel\"></InputEl>\n        <ErrorDiv name=\"number\" component=\"div\" />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Create\n        </Button>\n      </FormEl>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 18px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  background-color: #7f56d9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 6px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #27408b;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button, Item } from './ContactListEl.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport const ContactListEl = ({ id, name, number }) => {\n  const isDisabled = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      {name}: {number}\n      <Button\n        type=\"button\"\n        disabled={isDisabled}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactListEl.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { ContactListEl } from 'components/ContactListEl/ContactListEl';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListEl key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  outline: 0;\n  margin-bottom: 5px;\n  width: 350px;\n  background-color: transparent;\n\n  &:focus {\n    border-color: #3366cc;\n  }\n`;\n","import { Input, Label } from './ContactFilter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/slice';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(changeFilter(e.target.value.toLowerCase()))}\n        value={filter}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 20px;\n`;\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 15px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Wrapper, Title, SubTitle } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Create contact</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      <ContactFilter />\n      <ContactList />\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["FormEl","styled","Form","_templateObject","_taggedTemplateLiteral","LabelEl","_templateObject2","InputEl","Field","_templateObject3","FormWrapper","_templateObject4","ErrorDiv","ErrorMessage","_templateObject5","selectContacts","state","contacts","items","selectIsLoading","isLoading","contactSchema","Yup","shape","name","required","matches","number","ContactForm","nameInputID","nanoid","numberInputID","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","contact","actions","trim","some","savedContact","toLowerCase","checkIsPresent","alert","concat","addContact","resetForm","children","_jsxs","htmlFor","id","component","type","Button","variant","color","Item","ContactListEl","_ref","isDisabled","disabled","onClick","deleteContact","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilterValue","filter","selectFilteredContacts","includes","ContactList","filteredContacts","Label","Input","ContactFilter","onChange","e","changeFilter","target","Wrapper","Title","SubTitle","useEffect","fetchContacts","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}