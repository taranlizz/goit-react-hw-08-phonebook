{"version":3,"file":"static/js/236.2ac76a70.chunk.js","mappings":"oMAEaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIpBC,EAAWH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iDAKnBG,EAAUL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8B,SCTnBK,EAAc,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC5B,OACEC,EAAAA,EAAAA,MAACX,EAAO,CAAAU,SAAA,EACNE,EAAAA,EAAAA,KAACR,EAAQ,CAAAM,SAAC,2BACVE,EAAAA,EAAAA,KAACN,EAAO,CAAAI,SAAEA,MAGhB,C,sECPaG,E,QAAgBZ,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gK,yKCC1BW,GAASb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wEAMrBa,EAAUf,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qDAKtBc,GAAUhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qSAgBvBgB,EAAclB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kC,iKCvBxBkB,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAExB,OACEb,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAAlB,UACEE,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAACC,EAAaC,GACtBd,GAASe,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAE5B,UAEFC,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAAAJ,SAAA,EACLE,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACuB,QAASf,EAAYd,SAAC,UAC/BE,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACNuB,KAAK,OACLT,KAAK,OACLU,GAAIjB,EACJkB,YAAY,yBACZC,QAAQ,2HACRC,UAAQ,KAEVhC,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACuB,QAASb,EAAahB,SAAC,WAChCE,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACNuB,KAAK,QACLT,KAAK,QACLU,GAAIf,EACJgB,YAAY,mBACZE,UAAQ,KAEVhC,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACuB,QAASZ,EAAgBjB,SAAC,cACnCE,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACNuB,KAAK,WACLT,KAAK,WACLU,GAAId,EACJe,YAAY,iBACZE,UAAQ,EACRC,UAAU,OAEZjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACN,KAAK,SAASO,QAAQ,YAAYC,MAAM,YAAWtC,SAAC,kBAOtE,ECzCA,EAXiB,WACf,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CAAAT,SAAA,EACVE,EAAAA,EAAAA,KAACJ,EAAAA,EAAW,CAAAE,SAAC,wBACbE,EAAAA,EAAAA,KAACS,EAAY,QAIrB,C,wDCbO,IAkBII,EAAS,WAAH,IAAIwB,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACf,EAAIgB,GAWvD,OAREhB,IAFFgB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,C","sources":["components/AuthHeading/AuthHeading.styled.jsx","components/AuthHeading/AuthHeading.jsx","components/CenterWrapper/CenterWrapper.jsx","components/Form/FormStyle.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Greeting = styled.p`\n  font-size: 14px;\n  color: #757575;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 30px;\n`;\n","import { Greeting, Heading, Wrapper } from './AuthHeading.styled';\n\nexport const AuthHeading = ({ children }) => {\n  return (\n    <Wrapper>\n      <Greeting>Welcome! 👋</Greeting>\n      <Heading>{children}</Heading>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CenterWrapper = styled.div`\n  position: relative;\n  height: calc(100vh - 70px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const LabelEl = styled.label`\n  font-size: 15px;\n  margin-bottom: 5px;\n`;\n\nexport const InputEl = styled(Field)`\n  height: 40px;\n  padding-right: 12px;\n  padding-left: 12px;\n  background-color: rgba(127, 86, 217, 0.04);\n  border-radius: 4px;\n  margin-bottom: 20px;\n  border: 1px solid #d8d8d8;\n  font-size: 14px;\n  line-height: 1.75;\n\n  &:focus {\n    outline: 1px solid #7f56d9;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 120px;\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { FormEl, InputEl, LabelEl } from 'components/Form/FormStyle.styled';\nimport { register } from 'redux/auth/operations';\nimport { Button } from '@mui/material';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const nameInputID = nanoid();\n  const emailInputID = nanoid();\n  const passwordInputID = nanoid();\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={(credentials, actions) => {\n          dispatch(register(credentials));\n          actions.resetForm();\n        }}\n      >\n        <FormEl>\n          <LabelEl htmlFor={nameInputID}>Name</LabelEl>\n          <InputEl\n            type=\"text\"\n            name=\"name\"\n            id={nameInputID}\n            placeholder=\"Please enter your name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n          <LabelEl htmlFor={emailInputID}>Email</LabelEl>\n          <InputEl\n            type=\"email\"\n            name=\"email\"\n            id={emailInputID}\n            placeholder=\"Enter your email\"\n            required\n          />\n          <LabelEl htmlFor={passwordInputID}>Password</LabelEl>\n          <InputEl\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputID}\n            placeholder=\"Enter password\"\n            required\n            minLength=\"6\"\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Sign Up\n          </Button>\n        </FormEl>\n      </Formik>\n    </>\n  );\n};\n","import { AuthHeading } from 'components/AuthHeading/AuthHeading';\nimport { CenterWrapper } from 'components/CenterWrapper/CenterWrapper';\nimport { FormWrapper } from 'components/Form/FormStyle.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <CenterWrapper>\n      <FormWrapper>\n        <AuthHeading>Create new account</AuthHeading>\n        <RegisterForm />\n      </FormWrapper>\n    </CenterWrapper>\n  );\n};\n\nexport default Register;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Greeting","_templateObject2","Heading","_templateObject3","AuthHeading","_ref","children","_jsxs","_jsx","CenterWrapper","FormEl","Form","LabelEl","InputEl","Field","FormWrapper","_templateObject4","RegisterForm","dispatch","useDispatch","nameInputID","nanoid","emailInputID","passwordInputID","_Fragment","Formik","initialValues","name","email","password","onSubmit","credentials","actions","register","resetForm","htmlFor","type","id","placeholder","pattern","required","minLength","Button","variant","color","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}